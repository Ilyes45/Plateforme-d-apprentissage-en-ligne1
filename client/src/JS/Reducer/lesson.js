import { FAIL_LESSON, GET_LESSON, LOAD_LESSON, SUCC_LESSON } from "../ActionsTypes/lesson";

// Ã‰tat initial du reducer pour les leÃ§ons
const initialState = {
  listLessons: [],     // Liste de toutes les leÃ§ons
  lessonToGet: {},     // Contient une leÃ§on spÃ©cifique pour affichage ou Ã©dition
  load: false,         // Indique si une requÃªte est en cours
  error: null,         // Contient un Ã©ventuel message d'erreur
};

const lessonReducer = (state = initialState, { type, payload }) => {
  switch (type) {

    // ğŸ”¹ DÃ©but d'une requÃªte pour rÃ©cupÃ©rer les leÃ§ons
    case LOAD_LESSON:
      return { ...state, load: true };

    // ğŸ”¹ SuccÃ¨s de rÃ©cupÃ©ration des leÃ§ons
    case SUCC_LESSON:
      return { ...state, load: false, listLessons: payload.listLessons };

    // ğŸ”¹ Ã‰chec lors de la rÃ©cupÃ©ration ou modification d'une leÃ§on
    case FAIL_LESSON:
      return { ...state, load: false, error: payload };

    // ğŸ”¹ RÃ©cupÃ©ration d'une seule leÃ§on pour affichage ou Ã©dition
    case GET_LESSON:
      return { ...state, load: false, lessonToGet: payload.lessonToGet };

    // ğŸ”¹ Cas par dÃ©faut : retourne l'Ã©tat actuel
    default:
      return state;
  }
};

export default lessonReducer;
